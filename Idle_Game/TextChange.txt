숫자들을 1000000 이런식이 아닌 1.00a 이런식으로 문자열로 표현하는 법을 정리한 코드

public class TextChangeManager : MonoBehaviour
{
    static readonly string[] CurrencyUnits = new string[] 
    { "", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",
        "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "aa", "ab", "ac", "ad",
        "ae", "af", "ag", "ah", "ai", "aj", "ak", "al", "am", "an", "ao", "ap", "aq",
        "ar", "as", "at", "au", "av", "aw", "ax", "ay", "az", "ba", "bb", "bc", "bd",
        "be", "bf", "bg", "bh", "bi", "bj", "bk", "bl", "bm", "bn", "bo", "bp", "bq",
        "br", "bs", "bt", "bu", "bv", "bw", "bx", "by", "bz", "ca", "cb", "cc", "cd",
        "ce", "cf", "cg", "ch", "ci", "cj", "ck", "cl", "cm", "cn", "co", "cp", "cq",
        "cr", "cs", "ct", "cu", "cv", "cw", "cx", };

    public string CurrencyString(double number)
    {
        string zero = "0";

        if(-1 < number && number < 1)
        {
            return zero;
        }
        if (double.IsInfinity(number))
        {
            return "Infinity";
        }

        // 부호 출력 문자열
        string significant = (number < 0) ? "-" : string.Empty;

        // 보여줄 숫자
        string showNumber = string.Empty;

        // 단위 문자열
        string unityString = string.Empty;

        // 지수 표현식으로 변경 후 처리
        string[] partsSplit = number.ToString("E").Split('+');

        //예외
        if (partsSplit.Length < 2) return zero;

        //지수 자릴수 표현
        if(!int.TryParse(partsSplit[1], out int exponent))
        {
            Debug.LogWarningFormat("Failed to currentString({0}) : partSplit[1] = {1}", number, partsSplit[1]);
            return zero;
        }

        // 몫은 문자열 인덱스
        int quotient = exponent / 3;
        // 나머지는 정수부 자릿수 계산
        int remainder = exponent % 3;

        if(exponent < 3)
        {
            //3자리 즉 a미만은 그냥 정수 표현
            showNumber = System.Math.Truncate(number).ToString();
        }
        else
        {
            // 10의 거듭제곱을 구해서 자릿수 표현값을 만들어줌
            var temp = double.Parse(partsSplit[0].Replace("E", "")) * System.Math.Pow(10, remainder);
            // 소수 둘째자리까지만 출력
            showNumber = temp.ToString("F".Replace(",00", ""));
        }

        unityString = CurrencyUnits[quotient];

        return string.Format("{0}{1}{2}", significant, showNumber, unityString);
    }

    public string CurrencyString(string num)
    {
        double number;
        number = double.Parse(num);
        string zero = "0";

        if (-1 < number && number < 1)
        {
            return zero;
        }
        if (double.IsInfinity(number))
        {
            return "Infinity";
        }

        // 부호 출력 문자열
        string significant = (number < 0) ? "-" : string.Empty;

        // 보여줄 숫자
        string showNumber = string.Empty;

        // 단위 문자열
        string unityString = string.Empty;

        // 지수 표현식으로 변경 후 처리
        string[] partsSplit = number.ToString("E").Split('+');

        //예외
        if (partsSplit.Length < 2) return zero;

        //지수 자릴수 표현
        if (!int.TryParse(partsSplit[1], out int exponent))
        {
            Debug.LogWarningFormat("Failed to currentString({0}) : partSplit[1] = {1}", number, partsSplit[1]);
            return zero;
        }

        // 몫은 문자열 인덱스
        int quotient = exponent / 3;
        // 나머지는 정수부 자릿수 계산
        int remainder = exponent % 3;

        if (exponent < 3)
        {
            //3자리 즉 a미만은 그냥 정수 표현
            showNumber = System.Math.Truncate(number).ToString();
        }
        else
        {
            // 10의 거듭제곱을 구해서 자릿수 표현값을 만들어줌
            var temp = double.Parse(partsSplit[0].Replace("E", "")) * System.Math.Pow(10, remainder);
            // 소수 둘째자리까지만 출력
            showNumber = temp.ToString("F".Replace(",00", ""));
        }

        unityString = CurrencyUnits[quotient];

        return string.Format("{0}{1}{2}", significant, showNumber, unityString);
    }
}